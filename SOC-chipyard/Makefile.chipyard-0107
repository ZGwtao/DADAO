#
# Makefile for SoC in chipyard
#
CHIPYARD_0107_LOCAL		:= /pub/GITHUB/ucb-bar/chipyard.git
CHIPYARD_0107_GITHUB		:= https://github.com/ucb-bar/chipyard.git
CHIPYARD_0107_VERSION		:= 1.7.0
CHIPYARD_0107_BRANCH		:= dadao

CHIPYARD_0107_SOURCE		:= $(DIR_DADAO_SOURCE)/chipyard-0107
CHIPYARD_0107_BUILD		:= $(DIR_DADAO_BUILD)/chipyard-0107
CHIPYARD_0107_LOG_STDOUT	:= $(DIR_DADAO_LOG)/chipyard-0107.out
CHIPYARD_0107_LOG_STDERR	:= $(DIR_DADAO_LOG)/chipyard-0107.err

CHIPYARD_0107_CONFIG		:= $(DIR_DADAO_TOP)/SOC-chipyard/chipyard-0107-config
CHIPYARD_0107_PATCHES		:= $(DIR_DADAO_TOP)/SOC-chipyard/chipyard-0107-patches

CHIPYARD_0107_DADAO_WUMING	:= $(DIR_DADAO_TOP)/SOC-chipyard/dadao-wuming
CHIPYARD_0107_DADAO_CONFIG	?= Wuming1StageConfig
#CHIPYARD_0107_DADAO_BINARY	?= $(CHIPYARD_0107_SOURCE)/generators/riscv-sodor/riscv-bmarks/dhrystone.riscv
CHIPYARD_0107_DADAO_BINARY	?= $(DIR_DADAO_TOP)/__tests/isa/dduii-p-and

CHIPYARD_0107_DADAO_PATH	:= $(DIR_DADAO_TARGET)/bin:/bin:/usr/bin

chipyard-0107-clean:
	@echo "Remove old chipyard source dir ..."
	@rm -fr $(CHIPYARD_0107_SOURCE)
	@echo "Remove old chipyard build dir ..."
	@rm -fr $(CHIPYARD_0107_BUILD)

chipyard-0107-prepare:
	# Check necessary fesvr headers
	@test -d $(DIR_DADAO_TARGET)/include/fesvr || make -s -C $(DIR_DADAO_TOP) rte-highfive

chipyard-0107-source:
	@test -d $(DIR_DADAO_SOURCE) || mkdir -p $(DIR_DADAO_SOURCE)
	@rm -fr $(CHIPYARD_0107_SOURCE)
ifeq ($(wildcard $(CHIPYARD_0107_LOCAL)),)
	# Clone remote repo
	@git clone -q $(CHIPYARD_0107_GITHUB) -- $(CHIPYARD_0107_SOURCE)
else
	# Clone local repo
	@git clone -q $(CHIPYARD_0107_LOCAL) -- $(CHIPYARD_0107_SOURCE)
endif
	@cd $(CHIPYARD_0107_SOURCE); git checkout -qb $(CHIPYARD_0107_BRANCH) $(CHIPYARD_0107_VERSION)
	# Setup submodules by terribly downloading git repos from github.com
	@cd $(CHIPYARD_0107_SOURCE); ./scripts/init-submodules-no-riscv-tools.sh
	# Copy dadao generators into chipyard
	@cp -a $(CHIPYARD_0107_DADAO_WUMING) $(CHIPYARD_0107_SOURCE)/generators/
	@cd $(CHIPYARD_0107_SOURCE);								\
		git add generators/dadao-wuming;						\
		git commit -asm"DADAO: add dadao-wuming"
	# Add dadao configs and patches
	@cp -a $(CHIPYARD_0107_CONFIG)/* $(CHIPYARD_0107_SOURCE)/generators/chipyard/src/main/scala/config/
	@cd $(CHIPYARD_0107_SOURCE);								\
		git add generators/chipyard/src/main/scala/config/;				\
		git commit -asm"DADAO: add chipyard-config";					\
		git am $(CHIPYARD_0107_PATCHES)/*

chipyard-0107-build-new:
	@rm -fr $(CHIPYARD_0107_BUILD)
	@mkdir -p $(CHIPYARD_0107_BUILD)

chipyard-0107-build:
	@cd $(CHIPYARD_0107_SOURCE)/sims/verilator;						\
		RISCV=$(DIR_DADAO_TARGET)							\
		make -j16 VERILATOR_THREADS=8							\
			CONFIG=$(CHIPYARD_0107_DADAO_CONFIG)					\
			sim_dir=$(CHIPYARD_0107_BUILD)

chipyard-0107-run-binary:
	@cd $(CHIPYARD_0107_SOURCE)/sims/verilator;						\
		RISCV=$(DIR_DADAO_TARGET)							\
		PATH=$(CHIPYARD_0107_DADAO_PATH)						\
		make CONFIG=$(CHIPYARD_0107_DADAO_CONFIG) sim_dir=$(CHIPYARD_0107_BUILD)	\
			 run-binary BINARY=$(CHIPYARD_0107_DADAO_BINARY)

chipyard-0107-tracer:
	# analyzes the contents of the omitted trace file and generates basic statistics
	@$(CHIPYARD_0107_SOURCE)/generators/riscv-sodor/scripts/tracer.py			\
		$(CHIPYARD_0107_BUILD)/output/chipyard.TestHarness.$(CHIPYARD_0107_DADAO_CONFIG)/dhrystone.out

chipyard-0107-highfive:
	@echo "--- BUILD chipyard-0107 BEGIN ---"
	# 0. Remove old chipyard logfiles
	@test -d $(DIR_DADAO_LOG) || mkdir -p $(DIR_DADAO_LOG)
	@rm -fr $(CHIPYARD_0107_LOG_STDOUT) $(CHIPYARD_0107_LOG_STDERR)
	# 1. Clean old chipyard ...
	@make -s chipyard-0107-clean			1>> $(CHIPYARD_0107_LOG_STDOUT) 2>> $(CHIPYARD_0107_LOG_STDERR)
	# 2. Prepare chipyard ...
	@make -s chipyard-0107-prepare			1>> $(CHIPYARD_0107_LOG_STDOUT) 2>> $(CHIPYARD_0107_LOG_STDERR)
	# 3. Clone chipyard ...
	@make -s chipyard-0107-source			1>> $(CHIPYARD_0107_LOG_STDOUT) 2>> $(CHIPYARD_0107_LOG_STDERR)
	# 4. Clean chipyard build dir ...
	@make -s chipyard-0107-build-new		1>> $(CHIPYARD_0107_LOG_STDOUT) 2>> $(CHIPYARD_0107_LOG_STDERR)
	# 5. Build chipyard ...
	@make -s chipyard-0107-build			1>> $(CHIPYARD_0107_LOG_STDOUT) 2>> $(CHIPYARD_0107_LOG_STDERR)
	@echo "--- BUILD chipyard-0107 DONE! ---"

