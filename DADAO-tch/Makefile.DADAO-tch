#
# Makefile for toolchain
#

DIR_DADAO_TCH		:= $(DIR_DADAO)/DADAO-tch
DIR_BUILD_TCH		:= $(DIR_DADAO)/build-tch
DIR_INSTALL_TCH		:= $(DIR_DADAO)/build-tch/__install

tch-help:
	@echo	""
	@echo	"Help for toolchain"
	@echo	""

tch-clean:
	@rm -fr $(DIR_BUILD_TCH)

tch-highfive:
	@echo "=== BUILD Toolchain BEGIN ==="
	@echo "Remove old building dir"
	@rm -fr $(DIR_BUILD_TCH)
	@BINUTILS_GDB_0233_INSTALL=$(DIR_INSTALL_TCH) make -s binutils-gdb-0233-highfive
	@GCC_0902_INSTALL=$(DIR_INSTALL_TCH) make -s gcc-0902-highfive
	@echo "=== BUILD Toolchain DONE! ==="

GCC_0902_ORIGIN		:= $(DIR_GIT_TAO)/gcc.git
GCC_0902_VERSION	:= gcc-9_2_0-release
GCC_0902_BRANCH		:= dadao-0902
GCC_0902_TARGET		:= dadao-linux-elf

GCC_0902_NEWFILES	:= $(DIR_DADAO_TCH)/gcc-0902-newfiles
GCC_0902_PATCHES	:= $(DIR_DADAO_TCH)/gcc-0902-patches

GCC_0902_WORKING	:= $(DIR_BUILD_TCH)/gcc-0902
GCC_0902_INSTALL	?= $(DIR_BUILD_TCH)/__gcc-0902
GCC_0902_LOG_STDOUT	:= $(DIR_BUILD_TCH)/_log-stdout-gcc-0902
GCC_0902_LOG_STDERR	:= $(DIR_BUILD_TCH)/_log-stderr-gcc-0902

gcc-0902-clean:
	@echo "Remove old gcc repo ..."
	@rm -fr $(GCC_0902_WORKING)
	@echo "Remove old gcc install ..."
ifneq ($(GCC_0902_INSTALL), $(DIR_INSTALL_TCH))
	@rm -fr $(GCC_0902_INSTALL)
endif

gcc-0902-new:
	@echo "Clone official repo"
	@git clone $(GCC_0902_ORIGIN) -- $(GCC_0902_WORKING)
	@cd $(GCC_0902_WORKING); git checkout -b $(GCC_0902_BRANCH) $(GCC_0902_VERSION)
	@echo "Copy gcc/config/dadao dir"
	@cp -a $(GCC_0902_NEWFILES)/gcc/config/* $(GCC_0902_WORKING)/gcc/config/
	@cd $(GCC_0902_WORKING);					\
		git add gcc/config/dadao;				\
		git commit -sm"DADAO: add gcc/config/dadao dir"
	@echo "Apply gcc-0902-patches ..."
	@cd $(GCC_0902_WORKING); git am $(GCC_0902_PATCHES)/*.patch

gcc-0902-conf:
	@cd $(GCC_0902_WORKING); ./configure				\
		--target=$(GCC_0902_TARGET)				\
		--prefix=$(GCC_0902_INSTALL)				\
		--disable-nls						\
		--enable-languages=c					\
		--enable-checking					\
		--enable-werror						\
		--without-headers

gcc-0902-make:
	@make -C $(GCC_0902_WORKING) all-gcc -j8

gcc-0902-install:
	@make -C $(GCC_0902_WORKING) install-gcc

gcc-0902-highfive:
	@echo "BEGIN TO BUILD gcc-0902!"
	@echo "0. Check build-tch dir and remove old gcc logfiles"
	@test -d $(DIR_BUILD_TCH) || mkdir -p $(DIR_BUILD_TCH)
	@rm -fr $(GCC_0902_LOG_STDOUT) $(GCC_0902_LOG_STDERR)
	@echo "1. Clean old gcc ..."
	@make -s gcc-0902-clean				1>> $(GCC_0902_LOG_STDOUT) 2>> $(GCC_0902_LOG_STDERR)
	@echo "2. Clone and patch new gcc ..."
	@make -s gcc-0902-new				1>> $(GCC_0902_LOG_STDOUT) 2>> $(GCC_0902_LOG_STDERR)
	@echo "2. Clone and patch new gcc complete."
	@echo "3. Configure gcc ..."
	@make -s gcc-0902-conf				1>> $(GCC_0902_LOG_STDOUT) 2>> $(GCC_0902_LOG_STDERR)
	@echo "3. Configure gcc complete."
	@echo "4. Make all-gcc ..."
	@make -s gcc-0902-make				1>> $(GCC_0902_LOG_STDOUT) 2>> $(GCC_0902_LOG_STDERR)
	@echo "4. Make all-gcc complete."
	@echo "5. Install gcc ..."
	@make -s gcc-0902-install			1>> $(GCC_0902_LOG_STDOUT) 2>> $(GCC_0902_LOG_STDERR)
	@echo "5. Install gcc complete."
	@echo "BUILD gcc-0902 DONE!"

BINUTILS_GDB_0233_ORIGIN		:= $(DIR_GIT_TAO)/binutils-gdb.git
BINUTILS_GDB_0233_VERSION		:= binutils-2_33_1
BINUTILS_GDB_0233_BRANCH		:= dadao-0233
BINUTILS_GDB_0233_TARGET		:= dadao-linux-elf

BINUTILS_GDB_0233_NEWFILES		:= $(DIR_DADAO_TCH)/binutils-gdb-0233-newfiles
BINUTILS_GDB_0233_PATCHES		:= $(DIR_DADAO_TCH)/binutils-gdb-0233-patches

BINUTILS_GDB_0233_SOURCE		:= $(DIR_DADAO_SOURCE)/binutils-gdb-0233
BINUTILS_GDB_0233_BUILD			:= $(DIR_DADAO_BUILD)/binutils-gdb-0233
BINUTILS_GDB_0233_INSTALL		?= $(DIR_BUILD_TCH)/__binutils-gdb-0233
BINUTILS_GDB_0233_LOG_STDOUT		:= $(DIR_BUILD_TCH)/_log-stdout-binutils-gdb-0233
BINUTILS_GDB_0233_LOG_STDERR		:= $(DIR_BUILD_TCH)/_log-stderr-binutils-gdb-0233

binutils-gdb-0233-clean:
	@echo "Remove old binutils-gdb repo ..."
	@rm -fr $(BINUTILS_GDB_0233_SOURCE)
	@echo "Remove old binutils-gdb install ..."
ifneq ($(BINUTILS_GDB_0233_INSTALL),$(DIR_INSTALL_TCH))
	@rm -fr $(BINUTILS_GDB_0233_INSTALL)
endif

binutils-gdb-0233-new:
	@echo "Clone official repo"
	@git clone $(BINUTILS_GDB_0233_ORIGIN) -- $(BINUTILS_GDB_0233_SOURCE)
	@cd $(BINUTILS_GDB_0233_SOURCE);				\
		git checkout -b $(BINUTILS_GDB_0233_BRANCH) $(BINUTILS_GDB_0233_VERSION)
	@echo "Copy bfd dir"
	@cp -a $(BINUTILS_GDB_0233_NEWFILES)/bfd/* $(BINUTILS_GDB_0233_SOURCE)/bfd
	@cd $(BINUTILS_GDB_0233_SOURCE);				\
		git add bfd;						\
		git commit -sm"DADAO: add bfd related files"
	@echo "Copy gas/config dir"
	@cp -a $(BINUTILS_GDB_0233_NEWFILES)/gas/config/* $(BINUTILS_GDB_0233_SOURCE)/gas/config/
	@cd $(BINUTILS_GDB_0233_SOURCE);				\
		git add gas/config;					\
		git commit -sm"DADAO: add gas/config related files"
	@echo "Copy opcodes dir"
	@cp -a $(BINUTILS_GDB_0233_NEWFILES)/opcodes/* $(BINUTILS_GDB_0233_SOURCE)/opcodes/
	@cd $(BINUTILS_GDB_0233_SOURCE);				\
		git add opcodes;					\
		git commit -sm"DADAO: add opcodes related files"
	@echo "Copy ld dir"
	@cp -a $(BINUTILS_GDB_0233_NEWFILES)/ld/* $(BINUTILS_GDB_0233_SOURCE)/ld/
	@cd $(BINUTILS_GDB_0233_SOURCE);				\
		git add ld;						\
		git commit -sm"DADAO: add ld related files"
	@echo "Copy include dir"
	@cp -a $(BINUTILS_GDB_0233_NEWFILES)/include/* $(BINUTILS_GDB_0233_SOURCE)/include
	@cd $(BINUTILS_GDB_0233_SOURCE);				\
		git add include;					\
		git commit -sm"DADAO: add header files"
	@echo "Apply binutils-gdb-0233-patches ..."
	@cd $(BINUTILS_GDB_0233_SOURCE); git am $(BINUTILS_GDB_0233_PATCHES)/*.patch

binutils-gdb-0233-conf:
	@test -d $(BINUTILS_GDB_0233_BUILD) || mkdir -p $(BINUTILS_GDB_0233_BUILD)
	@cd $(BINUTILS_GDB_0233_BUILD) &&				\
		$(BINUTILS_GDB_0233_SOURCE)/configure			\
			--target=$(BINUTILS_GDB_0233_TARGET)		\
			--srcdir=$(BINUTILS_GDB_0233_SOURCE)		\
			--prefix=$(BINUTILS_GDB_0233_INSTALL)

binutils-gdb-0233-make:
	@make -C $(BINUTILS_GDB_0233_BUILD) -j8

binutils-gdb-0233-install:
	@make -C $(BINUTILS_GDB_0233_BUILD) install

binutils-gdb-0233-highfive:
	@echo "BEGIN TO BUILD binutils-gdb-0233!"
	@echo "0. Check build-tch dir and remove old binutils logfiles"
	@test -d $(DIR_BUILD_TCH) || mkdir -p $(DIR_BUILD_TCH)
	@rm -fr $(BINUTILS_GDB_0233_LOG_STDOUT) $(BINUTILS_GDB_0233_LOG_STDERR)
	@echo "1. Clean old binutils-gdb ..."
	@make -s binutils-gdb-0233-clean			1>> $(BINUTILS_GDB_0233_LOG_STDOUT) 2>> $(BINUTILS_GDB_0233_LOG_STDERR)
	@echo "2. Clone and patch new binutils-gdb ..."
	@make -s binutils-gdb-0233-new				1>> $(BINUTILS_GDB_0233_LOG_STDOUT) 2>> $(BINUTILS_GDB_0233_LOG_STDERR)
	@echo "2. Clone and patch new binutils-gdb complete."
	@echo "3. Configure binutils-gdb ..."
	@make -s binutils-gdb-0233-conf				1>> $(BINUTILS_GDB_0233_LOG_STDOUT) 2>> $(BINUTILS_GDB_0233_LOG_STDERR)
	@echo "3. Configure binutils-gdb complete."
	@echo "4. Make binutils-gdb ..."
	@make -s binutils-gdb-0233-make				1>> $(BINUTILS_GDB_0233_LOG_STDOUT) 2>> $(BINUTILS_GDB_0233_LOG_STDERR)
	@echo "4. Make binutils-gdb complete."
	@echo "5. Install binutils-gdb ..."
	@make -s binutils-gdb-0233-install			1>> $(BINUTILS_GDB_0233_LOG_STDOUT) 2>> $(BINUTILS_GDB_0233_LOG_STDERR)
	@echo "5. Install binutils-gdb complete."
	@echo "BUILD binutils-gdb-0233 DONE!"
